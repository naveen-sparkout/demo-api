{"version":3,"sources":["../../../../../../src/app/modules/users/users/controllers/userController.js"],"names":["responseModule","require","createUser","req","res","next","user","User","body","save","error","result","name","status","json","success","message","response","data","errorResponse","successResponse","winston","loginUser","email","find","$and","password","exec"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AADA,IAAMA,cAAc,GAAGC,OAAO,CAAC,gCAAD,CAA9B;;AAIA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,UAAU;AAAA,2FAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,IADkB,GACX,IAAIC,gBAAJ,CAASJ,GAAG,CAACK,IAAb,CADW;AAAA;AAAA;AAAA,mBAGhBF,IAAI,CAACG,IAAL,CAAU,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,kBAAID,KAAJ,EAAW;AACT,oBAAIA,KAAK,CAACE,IAAN,IAAc,iBAAlB,EAAqC;AACnC,yBAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAAA,OAAO,EAAE,CADiB;AAE1BC,oBAAAA,OAAO,EAAEN,KAAK,CAACM,OAFW;AAG1BC,oBAAAA,QAAQ,EAAE,GAHgB;AAI1BC,oBAAAA,IAAI,EAAE;AAJoB,mBAArB,CAAP;AAMD;;AACD,uBAAOlB,cAAc,CAACmB,aAAf,CAA6Bf,GAA7B,EAAkC;AACvCW,kBAAAA,OAAO,EAAE,CAD8B;AAEvCC,kBAAAA,OAAO,EAAE,sBAF8B;AAGvCE,kBAAAA,IAAI,EAAE;AACJR,oBAAAA,KAAK,EAALA;AADI;AAHiC,iBAAlC,CAAP;AAOD,eAhBD,MAgBO;AACL,uBAAOV,cAAc,CAACoB,eAAf,CAA+BhB,GAA/B,EAAoC;AACzCW,kBAAAA,OAAO,EAAE,CADgC;AAEzCC,kBAAAA,OAAO,EAAE,2BAFgC;AAGzCE,kBAAAA,IAAI,EAAEP;AAHmC,iBAApC,CAAP;AAKD;AACF,aAxBK,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AA6BtBU,gCAAQX,KAAR;;AA7BsB,6CA8BfL,IAAI,EA9BW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVH,UAAU;AAAA;AAAA;AAAA,GAAhB;AAmCP;AACA;AACA;AACA;AACA;AACA;;;;;AACQ,IAAMoB,SAAS;AAAA,4FAAG,kBAAOnB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,IADkB,GACX,IAAIC,gBAAJ,CAASJ,GAAG,CAACK,IAAJ,CAASe,KAAlB,CADW;AAAA;AAAA;AAAA,mBAGhBhB,iBAAKiB,IAAL,CAAU;AACdC,cAAAA,IAAI,EAAE,CAAC;AAAEF,gBAAAA,KAAK,EAAEpB,GAAG,CAACK,IAAJ,CAASe;AAAlB,eAAD,EAA4B;AAAEG,gBAAAA,QAAQ,EAAEvB,GAAG,CAACK,IAAJ,CAASkB;AAArB,eAA5B;AADQ,aAAV,EAGLC,IAHK,CAGA,UAACjB,KAAD,EAAQC,MAAR,EAAmB;AACvB,kBAAID,KAAJ,EAAW;AACT,oBAAIA,KAAK,CAACE,IAAN,IAAc,iBAAlB,EAAqC;AACnC,yBAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,oBAAAA,OAAO,EAAE,CADiB;AAE1BC,oBAAAA,OAAO,EAAEN,KAAK,CAACM,OAFW;AAG1BC,oBAAAA,QAAQ,EAAE,GAHgB;AAI1BC,oBAAAA,IAAI,EAAE;AAJoB,mBAArB,CAAP;AAMD;;AACD,uBAAOlB,cAAc,CAACmB,aAAf,CAA6Bf,GAA7B,EAAkC;AACvCW,kBAAAA,OAAO,EAAE,CAD8B;AAEvCC,kBAAAA,OAAO,EAAE,mBAF8B;AAGvCE,kBAAAA,IAAI,EAAE;AACJR,oBAAAA,KAAK,EAALA;AADI;AAHiC,iBAAlC,CAAP;AAOD,eAhBD,MAgBO;AACL,uBAAOV,cAAc,CAACoB,eAAf,CAA+BhB,GAA/B,EAAoC;AACzCW,kBAAAA,OAAO,EAAE,CADgC;AAEzCC,kBAAAA,OAAO,EAAE,yBAFgC;AAGzCE,kBAAAA,IAAI,EAAEP;AAHmC,iBAApC,CAAP;AAKD;AACF,aA3BK,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAgCtBU,gCAAQX,KAAR;;AAhCsB,8CAiCfL,IAAI,EAjCW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATiB,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import User from '../models/user.model'\r\nconst responseModule = require('../../../../../config/response');\r\nimport winston from '../../../../../config/winston';\r\n\r\n\r\n/**\r\n * Function to create a User\r\n * \r\n * @param {Object} req \r\n * @param {Object} res \r\n */\r\nexport const createUser = async (req, res, next) => {\r\n  const user = new User(req.body)\r\n  try {\r\n    await user.save((error, result) => {\r\n      if (error) {\r\n        if (error.name == 'ValidationError') {\r\n          return res.status(400).json({\r\n            success: 0,\r\n            message: error.message,\r\n            response: 400,\r\n            data: {}\r\n          });\r\n        }\r\n        return responseModule.errorResponse(res, {\r\n          success: 0,\r\n          message: \"User creation failed\",\r\n          data: {\r\n            error\r\n          }\r\n        });\r\n      } else {\r\n        return responseModule.successResponse(res, {\r\n          success: 1,\r\n          message: 'User created successfully',\r\n          data: result\r\n        });\r\n      }\r\n    })\r\n  } catch (err) {\r\n    winston.error(err);\r\n    return next();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Function to login a User\r\n * \r\n * @param {Object} req \r\n * @param {Object} res \r\n */\r\n export const loginUser = async (req, res, next) => {\r\n  const user = new User(req.body.email)\r\n  try {\r\n    await User.find({\r\n      $and: [{ email: req.body.email }, { password: req.body.password }]\r\n    })\r\n    .exec((error, result) => {\r\n      if (error) {\r\n        if (error.name == 'ValidationError') {\r\n          return res.status(400).json({\r\n            success: 0,\r\n            message: error.message,\r\n            response: 400,\r\n            data: {}\r\n          });\r\n        }\r\n        return responseModule.errorResponse(res, {\r\n          success: 0,\r\n          message: \"User LOGIN failed\",\r\n          data: {\r\n            error\r\n          }\r\n        });\r\n      } else {\r\n        return responseModule.successResponse(res, {\r\n          success: 1,\r\n          message: 'User LOGIN successfully',\r\n          data: result\r\n        });\r\n      }\r\n    });\r\n  } catch (err) {\r\n    winston.error(err);\r\n    return next();\r\n  }\r\n}\r\n"],"file":"userController.js"}