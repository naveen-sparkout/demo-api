{"version":3,"sources":["../../src/config/config.js"],"names":["env","process","NODE_ENV","global","config","module","exports","callback","asyncLib","series","envCb","err","files","require","path","join","__dirname","winston","info","dbURI","mongodb","host","db_name","mongoose","connection","readyState","connect","useNewUrlParser","useUnifiedTopology","retryWrites","on","set","enableMongoDebugging","autoIncrement","initialize","modelsCb","routePath","forEach","file","eventscb"],"mappings":"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","sourcesContent":["// import npm packages\r\nimport glob from \"glob\";\r\nimport path from \"path\";\r\nvar env = process.env.NODE_ENV || \"development\";\r\nimport mongoose from \"mongoose\";\r\nimport asyncLib from \"async\";\r\nimport autoIncrement from \"mongoose-auto-increment\";\r\n// import local files\r\nimport winston from \"./winston\";\r\n\r\nglobal.config = {};\r\n\r\nmodule.exports = function (callback) {\r\n  asyncLib.series(\r\n    [\r\n      function (envCb) {\r\n        // configuring the environment\r\n        glob(\"config/env/**/*.json\", function (err, files) {\r\n          if (err) {\r\n            return envCb(err);\r\n          } else {\r\n            // picking up the environment file\r\n            global.config = require(path.join(__dirname, \"env\", env + \".json\"));\r\n            // _.extend(config, JSON.parse(fs.readFileSync(path.join(__dirname, 'config.json'), 'utf-8')));\r\n            if (!config) {\r\n              return envCb(\"error occured while loading config file!\");\r\n            } else {\r\n              winston.info(\"loaded config file:\" + env);\r\n\r\n              var dbURI = config.mongodb.host + config.mongodb.db_name;\r\n              winston.info(\"Try to Connect MongoDb: \" + dbURI);\r\n              // make connection with mongodb\r\n              if (!mongoose.connection.readyState) {\r\n                mongoose.connect(dbURI, {\r\n                  useNewUrlParser: true,\r\n                  useUnifiedTopology: true,\r\n                  // useCreateIndex: true,\r\n                  retryWrites: false,\r\n                  // useFindAndModify: false\r\n                });\r\n              } else return envCb();\r\n\r\n              // when successfully connected\r\n              mongoose.connection.on(\"connected\", function () {\r\n                winston.info(\"mongoose connection open to \" + dbURI);\r\n\r\n                // Enabling mongoose debug mode if required\r\n                mongoose.set(\"debug\", config.mongodb.enableMongoDebugging);\r\n                return envCb();\r\n              });\r\n\r\n              autoIncrement.initialize(mongoose.connection);\r\n\r\n              // if the connection throws an error\r\n              mongoose.connection.on(\"error\", function (err) {\r\n                //   if you get error for the first time when this gets started make sure to run mongod\r\n                return envCb(err);\r\n              });\r\n\r\n              // when the connection is disconnected\r\n              mongoose.connection.on(\"disconnected\", function () {\r\n                return envCb(\"mongoose connection disconnected\");\r\n              });\r\n            }\r\n          }\r\n        });\r\n      },\r\n      function (modelsCb) {\r\n        // load all models\r\n        let routePath = path.join(__dirname, \"..\", \"app/modules/**/*.model.js\");\r\n        glob(routePath, function (err, files) {\r\n          if (err) {\r\n            return modelsCb(err);\r\n          } else {\r\n            winston.info(\"models are loading ...\");\r\n            files.forEach(function (file) {\r\n              require(`${file}`);\r\n              winston.info(`${file}`, \"is loaded\");\r\n            });\r\n            return modelsCb();\r\n          }\r\n        });\r\n      },\r\n      function (eventscb) {\r\n        // load all models\r\n        let routePath = path.join(\r\n          __dirname,\r\n          \"..\",\r\n          \"app/modules/library/**/*.js\"\r\n        );\r\n        glob(routePath, function (err, files) {\r\n          if (err) {\r\n            return eventscb(err);\r\n          } else {\r\n            winston.info(\"models are loading ...\");\r\n            files.forEach(function (file) {\r\n              require(`${file}`);\r\n              winston.info(`${file}`, \"is loaded\");\r\n            });\r\n            return eventscb();\r\n          }\r\n        });\r\n      },\r\n    ],\r\n    function (err) {\r\n      if (err) {\r\n        return callback(err);\r\n      } else {\r\n        return callback();\r\n      }\r\n    }\r\n  );\r\n};\r\n"],"file":"config.js"}