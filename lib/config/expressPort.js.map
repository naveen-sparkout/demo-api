{"version":3,"sources":["../../src/config/expressPort.js"],"names":["normalizePort","val","port","parseInt","isNaN","onError","error","syscall","bind","global","code","console","process","exit","onListening","addr","server","address","winston","info","chalk","bold","green"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;AACO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAClC,MAAMC,IAAI,GAAGC,QAAQ,CAACF,GAAD,EAAM,EAAN,CAArB;;AAEA,MAAIG,KAAK,CAACF,IAAD,CAAT,EAAiB;AACb;AACA,WAAOD,GAAP;AACH;;AAED,MAAIC,IAAI,IAAI,CAAZ,EAAe;AACX;AACA,WAAOA,IAAP;AACH;;AAED,SAAO,KAAP;AACH,CAdM;AAiBP;AACA;AACA;;;;;AAEO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAC9B,MAAIA,KAAK,CAACC,OAAN,KAAkB,QAAtB,EAAgC;AAC5B,UAAMD,KAAN;AACH;;AAED,MAAME,IAAI,GAAG,OAAOC,MAAM,CAACP,IAAd,KAAuB,QAAvB,kBACDO,MAAM,CAACP,IADN,mBAEDO,MAAM,CAACP,IAFN,CAAb,CAL8B,CAS9B;;AACA,UAAQI,KAAK,CAACI,IAAd;AACI,SAAK,QAAL;AACIC,MAAAA,OAAO,CAACL,KAAR,WAAiBE,IAAjB;AACAI,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACA;;AACJ,SAAK,YAAL;AACIF,MAAAA,OAAO,CAACL,KAAR,WAAiBE,IAAjB;AACAI,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACA;;AACJ;AACI,YAAMP,KAAN;AAVR;AAYH,CAtBM;AAwBP;AACA;AACA;;;;;AAEO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,MAAMC,IAAI,GAAGN,MAAM,CAACO,MAAP,CAAcC,OAAd,EAAb;AACA,MAAMT,IAAI,GAAG,OAAOO,IAAP,KAAgB,QAAhB,kBACDA,IADC,mBAEDA,IAAI,CAACb,IAFJ,CAAb;;AAGAgB,sBAAQC,IAAR,CAAaC,kBAAMC,IAAN,CAAWC,KAAX,CAAiB,wBAAjB,EAA2Cd,IAA3C,CAAb;AACH,CANM","sourcesContent":["import winston from './winston';\r\nimport chalk from 'chalk';\r\n\r\n// Normalize a port into a number, string, or false.\r\nexport const normalizePort = (val) => {\r\n    const port = parseInt(val, 10);\r\n\r\n    if (isNaN(port)) {\r\n        // named pipe\r\n        return val;\r\n    }\r\n\r\n    if (port >= 0) {\r\n        // port number\r\n        return port;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n\r\n/**\r\n * Event listener for HTTP server \"error\" event.\r\n */\r\n\r\nexport const onError = (error) => {\r\n    if (error.syscall !== 'listen') {\r\n        throw error;\r\n    }\r\n\r\n    const bind = typeof global.port === 'string' ?\r\n        `Pipe ${global.port}` :\r\n        `Port ${global.port}`;\r\n\r\n    // handle specific listen errors with friendly messages\r\n    switch (error.code) {\r\n        case 'EACCES':\r\n            console.error(`${bind} requires elevated privileges`);\r\n            process.exit(1);\r\n            break;\r\n        case 'EADDRINUSE':\r\n            console.error(`${bind} is already in use`);\r\n            process.exit(1);\r\n            break;\r\n        default:\r\n            throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Event listener for HTTP server \"listening\" event.\r\n */\r\n\r\nexport const onListening = () => {\r\n    const addr = global.server.address();\r\n    const bind = typeof addr === 'string' ?\r\n        `pipe ${addr}` :\r\n        `port ${addr.port}`;\r\n    winston.info(chalk.bold.green('Server is listening on', bind));\r\n};\r\n"],"file":"expressPort.js"}