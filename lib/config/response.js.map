{"version":3,"sources":["../../src/config/response.js"],"names":["successResponse","res","data","statusCode","response","process","env","NODE_ENV","status","json","errorResponse","err","name","success","message","errors","Code","errorResponseWithData","req","msgCode","msg","EN"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,IAAN,EAAiC;AAAA,MAArBC,UAAqB,uEAAR,GAAQ;AAC5DD,EAAAA,IAAI,CAACE,QAAL,GAAgB,GAAhB;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,SAAnE,IAAgFF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,SAA7G,EAAwH,CACpH;AACH;;AACDN,EAAAA,GAAG,CAACO,MAAJ,CAAWL,UAAX,EAAuBM,IAAvB,CAA4BP,IAA5B;AACH,CANM;;;;AAQA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACT,GAAD,EAAMU,GAAN,EAAe;AACxC,MAAIA,GAAG,CAACC,IAAJ,IAAY,iBAAhB,EAAmC;AAC9BX,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAClBI,MAAAA,OAAO,EAAE,CADS;AAElBC,MAAAA,OAAO,EAAEH,GAAG,CAACI,MAFK;AAGlBX,MAAAA,QAAQ,EAAE,GAHQ;AAIlBF,MAAAA,IAAI,EAAE;AAJY,KAArB;AAMJ,GAPD,MAOM;AACND,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLI,MAAAA,OAAO,EAAE,CADJ;AAELX,MAAAA,IAAI,EAAE,EAFD;AAGLY,MAAAA,OAAO,EAAEH,GAHJ;AAILP,MAAAA,QAAQ,EAAEO,GAAG,CAACK;AAJT,KAAT;AAMH;AACA,CAhBM;;;;AAkBA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAMjB,GAAN,QAAwBC,IAAxB,EAAiC;AAAA,MAApBiB,OAAoB,QAApBA,OAAoB;AAClElB,EAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLI,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,OAAO,EAAEC,mBAAOI,OAAP,EAAgBC,GAAhB,CAAoBC,EAFxB;AAGLjB,IAAAA,QAAQ,EAAE,GAHL;AAILF,IAAAA,IAAI,EAAJA;AAJK,GAAT;AAMH,CAPM","sourcesContent":["import errors from './errors';\r\nimport winston from './winston';\r\n\r\nexport const successResponse = (res, data, statusCode = 200) => {\r\n    data.response = 200;\r\n    if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'quality' || process.env.NODE_ENV === 'staging') {\r\n        // winston.info(JSON.stringify(data.data));\r\n    }\r\n    res.status(statusCode).json(data);\r\n};\r\n\r\nexport const errorResponse = (res, err,) => {\r\n    if (err.name == 'ValidationError') {\r\n         res.status(400).json({\r\n            success: 0,\r\n            message: err.errors,\r\n            response: 400,\r\n            data: {}\r\n        });\r\n    } else{\r\n    res.json({\r\n        success: 0,\r\n        data: {},\r\n        message: err,\r\n        response: err.Code\r\n    });\r\n}\r\n};\r\n\r\nexport const errorResponseWithData = (req, res, { msgCode }, data) => {\r\n    res.json({\r\n        success: 0,\r\n        message: errors[msgCode].msg.EN,\r\n        response: 400,\r\n        data\r\n    });\r\n};\r\n\r\n"],"file":"response.js"}